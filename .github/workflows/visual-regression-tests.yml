name: Visual Regression Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  visual-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build the project
      run: npm run build

    - name: Start preview server
      run: npm run preview &
      
    - name: Wait for server to be ready
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'

    - name: Run Playwright tests
      run: npm run test:visual
      continue-on-error: true

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test results on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

    - name: Upload updated screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: updated-screenshots
        path: tests/visual/homepage/homepage.spec.js-snapshots/
        retention-days: 30

    - name: Comment PR with test results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if there are test failures
          const testResultsPath = 'test-results';
          let hasFailures = false;
          
          try {
            if (fs.existsSync(testResultsPath)) {
              hasFailures = true;
            }
          } catch (error) {
            console.log('No test results found');
          }
          
          const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
          
          if (hasFailures) {
            const comment = `## üì∑ Visual Regression Tests - Changes Detected
          
          Visual tests have detected differences in the screenshots.
          
          **Available actions:**
          - üì• [Download updated screenshots](${runUrl}) (artifacts: \`updated-screenshots\`)
          - üìä [View full report](${runUrl}) (artifacts: \`playwright-report\`)
          
          **Are these changes intentional?**
          - ‚úÖ If the changes are correct, download the new screenshots and upload them to the repository
          - ‚ùå If they are unintentional, review the changes in your code
          
          üìù **How to update baselines:**
          \`\`\`bash
          # Run tests locally to generate new screenshots
          npm run test:visual
          
          # Or force update all screenshots
          npm run test:visual -- --update-snapshots
          \`\`\``;
          
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } else {
            const comment = `## ‚úÖ Visual Regression Tests - Successful
          
          All visual tests have passed correctly. No unexpected visual changes were detected.`;
          
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } 