name: Update Visual Baselines

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for updating the baselines'
        required: true
        default: 'Approved design changes'

# Grant GITHUB_TOKEN the permissions required
permissions:
  contents: write

jobs:
  update-baselines:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Build the project for testing
      run: npm run build:test

    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la dist/ || echo "❌ dist/ directory not found"
        if [ ! -d "dist" ]; then
          echo "❌ Build failed - no dist directory found"
          exit 1
        fi
        echo "✅ Build output verified"

    - name: Start preview server
      run: |
        echo "Starting static server with serve..."
        nohup npm run serve > server.log 2>&1 &
        echo "Server started with PID: $!"
        echo "SERVER_PID=$!" >> $GITHUB_ENV
      
    - name: Wait for server to be ready
      run: |
        echo "Waiting for server to be ready..."
        for i in {1..30}; do
          if curl -s -f http://localhost:4173 > /dev/null 2>&1; then
            echo "✅ Server is ready!"
            exit 0
          fi
          echo "⏳ Attempt $i: Server not ready yet, waiting 2 seconds..."
          sleep 2
        done
        echo "❌ Server failed to start after 60 seconds"
        echo "Server logs:"
        cat server.log || echo "No server logs found"
        exit 1

    - name: Update visual baselines
      run: npm run test:visual -- --update-snapshots

    - name: Show server logs on failure
      if: failure()
      run: |
        echo "📋 Server logs (last 50 lines):"
        tail -50 server.log || echo "No server logs found"

    - name: Stop preview server
      if: always()
      run: |
        if [ ! -z "$SERVER_PID" ]; then
          echo "Stopping server with PID: $SERVER_PID"
          kill $SERVER_PID || true
        fi

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add tests/visual/
        git commit -m "chore: update visual regression baselines

        Reason: ${{ github.event.inputs.reason }}
        
        Updated by: ${{ github.actor }}
        Workflow: ${{ github.workflow }} #${{ github.run_number }}"
        git push

    - name: Create summary
      run: |
        if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
          echo "✅ Baselines updated successfully" >> $GITHUB_STEP_SUMMARY
          echo "📝 Reason: ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "👤 Executed by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Changes have been committed automatically." >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ No changes detected in baselines" >> $GITHUB_STEP_SUMMARY
          echo "Current screenshots match existing ones." >> $GITHUB_STEP_SUMMARY
        fi 