---
import Logo from '@comp/Logo/Logo.astro';
import BlobBlood from '../BlobBlood/BlobBlood.astro';

import './Header.css';
---

<header class="header">
  <div class="header__backdrop"></div>
  <div class="header__wrapper">
    <div class="header__logo">
      <Logo />
    </div>

    <nav>
      <span id="nav-label" hidden>Navigation</span>

      <button 
        aria-expanded="false" 
        aria-labelledby="nav-label"
        class="topnav__control"
      >
        <div id="topnav__iconBar" class="topnav__iconBar"></div>
      </button> 

      <div class="topnav__menu" role="dialog" aria-labelledby="nav-label">
        <ul class="topnav__links">
          <!-- <li class="topnav__item">
            <a class="topnav__link" href="/blog">Blog</a>
          </li> -->
          <li class="topnav__item">
            <a class="topnav__link" href="/characters">Personajes</a>
          </li>
          <li class="topnav__item">
            <a class="topnav__link" href="/relations-map">Relaciones</a>
          </li>
        </ul>
        <div class="blob">
          <BlobBlood size='1000px'/>
        </div>
      </div>
    </nav>

    <!-- Cronologia, Todo en Uno -->
  </div>
</header>

<script>
  // @ts-nocheck
  import { scrollLock } from '../../lib/scrollLock/scrollLock.ts';

  let topnavControl;
  let topnavLinks;
  let header;
  let headerBackdrop;
  let isInitialized = false;
  let scrollTimeout;

  function toggleMenu() {
    if (!topnavControl) return;
    
    const expanded = topnavControl.getAttribute('aria-expanded') === 'true';
    topnavControl.setAttribute('aria-expanded', !expanded);
    
    if (!expanded) {
      scrollLock.lock();
    } else {
      scrollLock.unlock();
    }
  }

  function handleScroll() {
    if (scrollTimeout) {
      window.cancelAnimationFrame(scrollTimeout);
    }
    
    scrollTimeout = window.requestAnimationFrame(() => {
      if (!header || !headerBackdrop) return;
      
      if (window.scrollY > 300) {
        header.classList.add('header--scrolled');
        headerBackdrop.classList.add('header__backdrop--scrolled');
      } else {
        header.classList.remove('header--scrolled');
        headerBackdrop.classList.remove('header__backdrop--scrolled');
      }
    });
  }

  function cleanupListeners() {
    if (topnavControl) {
      topnavControl.removeEventListener('click', toggleMenu);
    }
    
    if (topnavLinks && topnavLinks.length) {
      topnavLinks.forEach(link => {
        link.removeEventListener('click', toggleMenu);
      });
    }
    
    document.removeEventListener('scroll', handleScroll);
  }

  function initializeMenu() {
    cleanupListeners();
    
    // Get references to DOM elements
    topnavControl = document.querySelector('.topnav__control');
    topnavLinks = document.querySelectorAll('.topnav__link');
    header = document.querySelector('.header');
    headerBackdrop = document.querySelector('.header__backdrop');
    
    // Ensure the menu starts closed
    topnavControl.setAttribute('aria-expanded', 'false');
    
    // Add optimized listeners
    topnavControl.addEventListener('click', toggleMenu);
    topnavLinks.forEach(link => {
      link.addEventListener('click', toggleMenu);
    });
    
    // Optimize scroll handling
    document.addEventListener('scroll', handleScroll);
    
    // Configure theme only once
    if (!isInitialized) {
      // document.documentElement.dataset.theme = 'dark';
      isInitialized = true;
    }
  }

  // Initial initialization with requestIdleCallback if available
  if ('requestIdleCallback' in window) {
    window.requestIdleCallback(() => initializeMenu());
  } else {
    // Fallback for browsers that don't support requestIdleCallback
    setTimeout(initializeMenu, 10);
  }

  // Handle Astro navigation more efficiently
  document.addEventListener('astro:page-load', initializeMenu);
</script>

<style>
  .blob {
    position: absolute;
    bottom: calc(20px + 304px);
    left: -250px;
    filter: blur(4px);
    opacity: 0.9;
    will-change: transform;
    animation: 
      pulseScale 45s ease-in-out infinite,
      floatAnimation 90s ease-in-out infinite;
    mix-blend-mode: screen;

    @media (width > 40rem) {
      display: none;
    }
  }

  @keyframes pulseScale {
    0% {
      scale: 1;
    }
    20% {
      scale: 1.2;
    }
    40% {
      scale: 0.8;
    }
    60% {
      scale: 1.1;
    }
    80% {
      scale: 0.9;
    }
    100% {
      scale: 1;
    }
  }

  @keyframes floatAnimation {
    0% {
      translate: 0 0;
    }
    20% {
      translate: 50px -50px;
    }
    40% {
      translate: -75px 75px;
    }
    60% {
      translate: 65px -65px;
    }
    80% {
      translate: -60px 60px;
    }
    100% {
      translate: 0 0;
    }
  }

  .topnav__control {
    position: relative;
    width: 32px;
    aspect-ratio: 1;
    padding: 0;
    border: none;
    background-color: transparent;

    @media (width > 40rem) {
      display: none;
    }
  }

  .topnav__iconBar {
    position: relative;
    width: 100%;
    height: 4px;
    background-color: white;
    border-radius: 2px;

  }

  .topnav__iconBar::before,
  .topnav__iconBar::after {
    content: "";
    position: absolute;
    left: 0;
    height: 4px;
    width: 100%;
    border-radius: 2px;
    background-color: white;
    transform-origin: center center;
    transition: transform 0.2s ease-in-out, top 0.2s ease-in-out;
  }

  .topnav__iconBar::before {
    top: 10px;
  }

  .topnav__iconBar::after {
    top: -10px;
  }

.topnav__control[aria-expanded='true'] {
  + .topnav__menu {
    translate: 0;
  }

  .topnav__iconBar {
    background-color: transparent;
  }

  .topnav__iconBar::before {
    transform: rotate(45deg);
    top: 0;
  }

  .topnav__iconBar::after {
    transform: rotate(-45deg);
    top: 0;
  }
}

.topnav__menu {
  @media (width < 40rem) {
    display: flex;
    flex-direction: column;
    position: fixed;
    inset: 0;
    margin-block-start: 84px;
    margin-block-end: 12px;
    margin-inline: 12px;
    border-radius: 10px;
    background-color: rgb(0 0 0 / 0.85);
    backdrop-filter: blur(16px);
    -webkit-backdrop-filter: blur(12px);
    translate: 100vw 0;
    
    transition: translate 0.2s ease-in-out, opacity 0.3s ease-in-out;
    overflow: hidden;
    box-shadow: 
      inset 0 0 0 1px rgb(255 255 255 / 0.1);
  }
}

  .topnav__links {
    display: flex;
    gap: 32px;
    margin-inline-start: 48px;
    padding-inline-start: 0;
    list-style: none;

    @media (width < 40rem) {
      flex-direction: column;
      align-items: center;
      gap: 24px;
      margin-inline-start: 0;
      padding-block-start: 64px;
      font-size: var(--bn-text-font-medium);
    }
  }

  .topnav__item {

  }

  .topnav__link {
    text-decoration: none;
    color: var(--bn-nav-link-color);
    transition: color 0.2s ease-in-out;

    &:hover {
      color: #BB0A1E;
    }
  }
</style>

<style is:global>
  :root[data-theme='light'] {
    color-scheme: light;
  }

  :root[data-theme='dark'] {
    color-scheme: dark;
  }
</style>