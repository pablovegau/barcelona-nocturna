---
import Logo from '@comp/Logo/Logo.astro';
import ThemeToggle from '@/components/ThemeToggle/ThemeToggle.astro';
import Topnav from '../Topnav/Topnav.astro';

import './styles.css';
---

<header class="header">
  <div class="header__backdrop"></div>
  <div class="header__wrapper">
    <div class="header__logo">
      <Logo />
    </div>

    <div class="header__themeToggle">
      <ThemeToggle />
    </div>

    <Topnav />
  </div>
</header>

<script>
  // @ts-nocheck
  import { scrollLock } from '../../lib/scrollLock/scrollLock.ts';

  let topnavControl;
  let topnavLinks;
  let header;
  let headerBackdrop;
  let isInitialized = false;
  let scrollTimeout;

  function toggleMenu() {
    if (!topnavControl) return;
    
    const expanded = topnavControl.getAttribute('aria-expanded') === 'true';
    topnavControl.setAttribute('aria-expanded', !expanded);
    
    if (!expanded) {
      scrollLock.lock();
    } else {
      scrollLock.unlock();
    }
  }

  function handleScroll() {
    if (scrollTimeout) {
      window.cancelAnimationFrame(scrollTimeout);
    }
    
    scrollTimeout = window.requestAnimationFrame(() => {
      if (!header || !headerBackdrop) return;
      
      if (window.scrollY > 300) {
        header.classList.add('header--scrolled');
        headerBackdrop.classList.add('header__backdrop--scrolled');
      } else {
        header.classList.remove('header--scrolled');
        headerBackdrop.classList.remove('header__backdrop--scrolled');
      }
    });
  }

  function cleanupListeners() {
    if (topnavControl) {
      topnavControl.removeEventListener('click', toggleMenu);
    }
    
    if (topnavLinks && topnavLinks.length) {
      topnavLinks.forEach(link => {
        link.removeEventListener('click', toggleMenu);
      });
    }
    
    document.removeEventListener('scroll', handleScroll);
  }

  function initializeMenu() {
    cleanupListeners();
    
    // Get references to DOM elements
    topnavControl = document.querySelector('.topnav__control');
    topnavLinks = document.querySelectorAll('.topnav__link');
    header = document.querySelector('.header');
    headerBackdrop = document.querySelector('.header__backdrop');
    
    // Ensure the menu starts closed
    topnavControl.setAttribute('aria-expanded', 'false');
    
    // Add optimized listeners
    topnavControl.addEventListener('click', toggleMenu);
    topnavLinks.forEach(link => {
      link.addEventListener('click', toggleMenu);
    });
    
    // Optimize scroll handling
    document.addEventListener('scroll', handleScroll);
    
    // Configure theme only once
    if (!isInitialized) {
      // document.documentElement.dataset.theme = 'dark';
      isInitialized = true;
    }
  }

  // Initial initialization with requestIdleCallback if available
  if ('requestIdleCallback' in window) {
    window.requestIdleCallback(() => initializeMenu());
  } else {
    // Fallback for browsers that don't support requestIdleCallback
    setTimeout(initializeMenu, 10);
  }

  // Handle page navigation
  document.addEventListener('DOMContentLoaded', initializeMenu);
</script>